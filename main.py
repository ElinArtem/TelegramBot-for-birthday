import telebot
import requests
from telebot import types
from config import settings
from help_function import conect_json, save_to_json

bot = telebot.TeleBot(settings["TOKEN"])

poll_results = {}


@bot.message_handler(commands=["start"])
def start(message: types.Message):

    users = conect_json("all_users.json")
    user_info = {
        "id": message.from_user.id,
        "name": message.from_user.full_name,
        "username": (
            f"@{message.from_user.username}" if message.from_user.username else "N/A"
        ),
    }
    if user_info not in users:
        users.append(user_info)
        save_to_json(users, "all_users.json")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("‚ÑπÔ∏è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚ÑπÔ∏è")
    markup.add(item1)

    mess = (
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        "–Ø –ø—Ä–µ–¥–≤–∫—É—à–∞—é —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –Ω–∞—à—É –≤—Å—Ç—Ä–µ—á—É, —á—Ç–æ–±—ã —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –æ –î—É–±–∞–µ –∏ –æ—Ç–ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å –º–æ–π –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è!\n\n"
        "–≠—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –Ω–µ –±—É–¥–µ—Ç –ø—Ä–∏–≤—ã—á–Ω—ã–º –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º.\n–ú—ã —Å –û–ª–µ—Å–µ–π –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –Ω–µ—á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ!\n\n"
        "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>‚ÑπÔ∏è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚ÑπÔ∏è</b>"
    )

    bot.send_message(message.chat.id, mess, parse_mode="html", reply_markup=markup)


@bot.message_handler(commands=["‚ÑπÔ∏è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚ÑπÔ∏è"])
def dop_info(message: types.Message) -> None:
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–∂–¥—É –≤—Å—Ç—Ä–µ—á–∏")
    item2 = types.KeyboardButton("–æ—á–µ–Ω—å –∂–¥—É –≤—Å—Ç—Ä–µ—á–∏")
    markup.row(item1, item2)

    bot.send_video(message.chat.id, settings["video_details"], reply_markup=markup)


def create_main_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("‚úâÔ∏è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ‚úâÔ∏è")
    item2 = types.KeyboardButton("üéí —á—Ç–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π üéí")
    item3 = types.KeyboardButton("üëó –¥—Ä–µ—Å—Å-–∫–æ–¥ üëó")
    item4 = types.KeyboardButton("üë© –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã üë©")
    markup.add(item1, item2, item3, item4)
    return markup


@bot.message_handler(content_types=["text"])
def main(message: types.Message):
    text = message.text.lower()
    markup = create_main_markup()

    if text == "‚ÑπÔ∏è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ ‚ÑπÔ∏è":
        dop_info(message)
    elif text == "‚úâÔ∏è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ‚úâÔ∏è":
        bot.send_document(message.chat.id, settings["invitation"], reply_markup=markup)
    elif text == "üéí —á—Ç–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π üéí":
        mess = (
            "1. –î–æ–∫—É–º–µ–Ω—Ç—ã:\n- –ü–∞—Å–ø–æ—Ä—Ç\n- –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏ –¥–ª—è –¥–µ—Ç–µ–π\n\n"
            "2. –û–¥–µ–∂–¥–∞:\n- –õ–µ–≥–∫–∞—è, –¥—ã—à–∞—â–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –∂–∞—Ä—ã.\n- –ö—É–ø–∞–ª—å–Ω–∏–∫ –¥–ª—è –ø–ª—è–∂–∞ –∏ –±–∞—Å—Å–µ–π–Ω–∞.\n- –£–¥–æ–±–Ω–∞—è –æ–±—É–≤—å –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫.\n\n"
            "3. –°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞:\n- –°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º —Å –≤—ã—Å–æ–∫–∏–º SPF.\n- –°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏.\n- –ì–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä\n\n"
            "4. –õ–∏—á–Ω—ã–µ –≤–µ—â–∏:\n- –ê–ø—Ç–µ—á–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º–∏"
        )
        bot.send_message(message.chat.id, mess, reply_markup=markup)
    elif text == "üëó –¥—Ä–µ—Å—Å-–∫–æ–¥ üëó":
        mess = (
            "–ù–∞ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —É–∂–∏–Ω 20 –∞–≤–≥—É—Å—Ç–∞ –ø—Ä–æ—Å–∏–º –±—ã—Ç—å –≤ total black –∏–ª–∏ total white. –ò –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã —Å–µ—Ä–µ–±—Ä—è–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞.\n"
            "*–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—ã–±—Ä–∞—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –¥—ã—à–∞—â–∏–µ —Ç–∫–∞–Ω–∏. –î—É–±–∞–π –ª—é–±–∏—Ç —Ä–∞–¥–æ–≤–∞—Ç—å –∂–∞—Ä–∫–æ–π –ø–æ–≥–æ–¥–æ–π."
        )
        image = settings["image_dress_code"]
        bot.send_photo(
            message.chat.id, image, mess, parse_mode="html", reply_markup=markup
        )
    elif text == "üë© –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã üë©":
        mess = (
            "–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å—é—Ä–ø—Ä–∏–∑ –¥–ª—è –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞ –∏–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º.\n\n"
            "–ó–∞—Ä–∞ +971 58 506 5089\n–í–∏–∫—Ç–æ—Ä–∏—è +971 56 570 9186"
        )
        bot.send_message(message.chat.id, mess, reply_markup=markup)
    elif text in ["–∂–¥—É –≤—Å—Ç—Ä–µ—á–∏", "–æ—á–µ–Ω—å –∂–¥—É –≤—Å—Ç—Ä–µ—á–∏"]:
        bot.send_message(
            message.chat.id,
            "–≠—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ò –º—ã —Ç–µ–±—è —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥–µ–º!",
            reply_markup=markup,
        )
    elif text == "poll":
        send_poll(message)
    else:
        mess = (
            "–î–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!\n"
            "–Ø - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏!\n"
            "–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç—ã, –Ω–∞–ø–∏—à–∏ –º–Ω–µ <b>üë© –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã üë©</b> –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫–∫."
        )
        bot.send_message(message.chat.id, mess, parse_mode="html", reply_markup=markup)


def send_poll(id: int):
    question = (
        "–î–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥ ü§ç"
        "–í—ã–±–µ—Ä–∏ –∞–ª–∫–æ–≥–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å."
        "–ú–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)"
    )
    options = [
        "–®–∞–º–ø–∞–Ω—Å–∫–æ–µ/–ü—Ä–æ—Å—Å–µ–∫–æ ü•Ç",
        "–í–∏—Å–∫–∏ ü•É",
        "–ë–µ–ª–æ–µ –≤–∏–Ω–æ",
        "–ö—Ä–∞—Å–Ω–æ–µ –≤–∏–Ω–æ üç∑",
        "–ü–∏–≤–æ üçª",
        "–ï–≥–µ—Ä–º–µ–π—Å—Ç–µ—Ä",
    ]
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø—Ä–æ—Å–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID –æ–ø—Ä–æ—Å–∞
    poll_message = bot.send_poll(
        chat_id=id,
        question=question,
        options=options,
        is_anonymous=False,
        allows_multiple_answers=True,
    )
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤
    poll_results[poll_message.poll.id] = {}


@bot.poll_answer_handler()
def handle_poll_answer(poll_answer):
    user_id = poll_answer.user.id
    name = poll_answer.user.full_name
    poll_id = poll_answer.poll_id
    option_ids = poll_answer.option_ids

    alco = conect_json("alco.json")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    poll_results[poll_id][user_id] = option_ids

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª
    alco.append(
        {
            "user_id": user_id,
            "name": name,
            "poll_id": poll_id,
            "option_ids": option_ids,
        }
    )

    save_to_json(alco, "alco.json")

    print(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}, {name} –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç(—ã) {option_ids} –≤ –æ–ø—Ä–æ—Å–µ {poll_id}."
    )


bot.polling(none_stop=True)



